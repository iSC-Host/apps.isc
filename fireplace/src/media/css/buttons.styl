@import 'lib';

$arrow-button-size = 30px;

// Install button width.
$btn-install-width = 90px;

// Install button font-size.
$btn-install-font-size = 12px;

.button {
    border: 0;
    btn_color($action-positive, $action-positive-tapped, $action-positive-hover, true);
    color: $white;
    display: inline-block;
    ellipsis();
    font: 400 $btn-font-size/$medium $primary-font-family;
    height: $btn-medium;
    line-height: 1;
    padding: 0 $btn-h-padding;
    text-align: center;
    text-decoration: none;
    white-space: nowrap;

    &:focus, &:hover, &:active {
        text-decoration: none;
    }
    &:not([disabled]):active {
        // Override `button:not([disabled]):active` from site.styl.
        background: $action-positive-tapped;
    }
    &.action {
        btn_color($action-success, $action-success-tapped, $action-success-hover, true);
    }
    &.cancel {
        btn_color($action-error, $action-error-tapped, $action-error-hover, true);
    }
    &.disabled,
    &[disabled] {
        btn_color($action-disabled, $action-disabled, $action-disabled, false);
    }
    &[disabled],
    &.disabled,
    &.purchasing,
    &.installing {
        pointer-events: none;

        &:hover {
            cursor: default;
        }
    }
    &.installed,
    &.purchased,
    &.incompatible {
        pointer-events: auto;
    }
    &.t,
    &.product {
        height: $btn-tiny;
    }
    &.s {
        height: $btn-small;
    }
    &.l {
        height: $btn-large;
    }

    // Waiting/Loading spinner.
    &.loading-submit {
        position: relative;

        &:after {
            content: "";
            display: block;
            spinner('absolute alt');
            top: 8px;
        }
    }
    &.product {
        padding: 0 32px;
    }
    .spin {
        display: inline-block;
        spinner('install');
    }
}

a.button {
    padding-top: 17px;

    &.t {
        padding-top: 5px;
    }
}

.arrow-button {
    background: $action-positive url(../img/pretty/arrow-l.svg) no-repeat 5px 50% / 15px 15px;
    border: 1px solid $white;
    border-radius: 50%;
    color: transparent;
    cursor: pointer;
    font-size: 0;
    height: $arrow-button-size;
    transition: 150ms;
    width: $arrow-button-size;

    &:hover {
        background-color: $action-positive-hover;
    }
    &:active {
        background: $action-positive-tapped url(../img/pretty/arrow-l.svg) no-repeat 5px 50% / 15px 15px;
    }
    &.next {
        background-position: 5px 50%;
        transform(scaleX(-1));
    }
    &.disabled {
        background-color: $action-disabled;
        cursor: default;
    }
}

@media $retina {
    .button {
        &.loading-submit:after {
            spinner-alt-image('retina');
        }
        .spin {
            spinner-install-image('retina');
        }
    }
}

@media (max-width: 600px) {
    .button.fat {
        display: block;
        width: 100%;
    }
}

// Install buttons.
.button.install {
    // Unset many .button properties to compensate for larger click target.
    btn_color(transparent, transparent, transparent, false);
    cursor: pointer;
    font-size: $btn-install-font-size;
    height: 34px;  // Actual click-target height. Queen Krupa request.
    min-width: $btn-install-width;
    padding: 0;
    position: absolute;
    right: 0;

    em {
        // This em becomes the visual button.
        btn_color($action-positive, $action-positive-tapped, $action-positive-hover, true);
        display: inline-block;
        ellipsis();
        font-style: normal;
        height: $btn-tiny;
        line-height: $btn-tiny;
        padding: 0 $btn-h-padding;
        vertical-align: bottom;
        width: $btn-install-width;
    }
    &:hover em {
        background: $action-positive-hover;
    }
    &:active em {
        background: $action-positive-tapped;
    }
    .spin {
        display: none;
    }
    // Accomodate a better vertical align since this state has no box-shadow.
    &[disabled] em {
        btn_color($action-disabled, $action-disabled, $action-disabled, false)
    }
    &.spinning,
    &.purchasing {
        background: $action-positive-tapped;
        bottom: 12px;
        height: $btn-tiny;

        em {
            display: none;
        }
        .spin {
            display: inline-block;
        }
    }
}

.langpack > button.install {
    position: static;
}

// Install button launch state.
.button.launch {
    btn_color(transparent, transparent, transparent, false);

    em {
        btn_color($action-success, $action-success-tapped, $action-success-hover, true);
    }
    &:hover em,
    &:focus em {
        background: $action-success-hover;
    }
    &:active em {
        background: $action-success-tapped;
    }
}
